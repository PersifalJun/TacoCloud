-- === DROP (на чистый старт) ===
-- DROP TABLE IF EXISTS Ingredient_Ref;
-- DROP TABLE IF EXISTS Taco;
-- DROP TABLE IF EXISTS Taco_Order;
-- DROP TABLE IF EXISTS Ingredient;
-- DROP TABLE IF EXISTS users;

-- === CREATE: сперва родительские таблицы ===

-- USERS
CREATE TABLE IF NOT EXISTS users (
                                     id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     username     VARCHAR(50)  NOT NULL,
                                     password     VARCHAR(100) NOT NULL,        -- под bcrypt
                                     fullname     VARCHAR(100) NOT NULL,
                                     street       VARCHAR(50)  NOT NULL,
                                     city         VARCHAR(50)  NOT NULL,
                                     state        VARCHAR(20)  NOT NULL,
                                     zip          VARCHAR(10)  NOT NULL,
                                     phoneNumber  VARCHAR(20)  NOT NULL,
                                     CONSTRAINT uk_users_username UNIQUE (username)
);

-- Справочник ингредиентов
CREATE TABLE IF NOT EXISTS Ingredient (
                                          id    VARCHAR(4)  NOT NULL PRIMARY KEY,
                                          name  VARCHAR(25) NOT NULL,
                                          type  VARCHAR(10) NOT NULL
);

-- Заказы: FK на users (users уже создана)
CREATE TABLE IF NOT EXISTS Taco_Order (
                                          id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                          delivery_name    VARCHAR(50)  NOT NULL,
                                          delivery_street  VARCHAR(50)  NOT NULL,
                                          delivery_city    VARCHAR(50)  NOT NULL,
                                          delivery_state   VARCHAR(20)  NOT NULL,
                                          user_id          BIGINT NOT NULL,                         -- nullable, т.к. ON DELETE SET NULL
                                          delivery_zip     VARCHAR(10)  NOT NULL,
                                          cc_number        VARCHAR(16)  NOT NULL,
                                          cc_expiration    VARCHAR(5)   NOT NULL,
                                          cc_cvv           VARCHAR(3)   NOT NULL,
                                          placed_at        TIMESTAMP    NOT NULL,
                                          CONSTRAINT fk_order_user
                                              FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Тако (дочерняя к заказу)
CREATE TABLE IF NOT EXISTS Taco (
                                    id             BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                    name           VARCHAR(50) NOT NULL,
                                    taco_order     BIGINT      NOT NULL,
                                    taco_order_key INT,                                 -- для @OrderColumn
                                    created_at     TIMESTAMP   NOT NULL,
                                    CONSTRAINT fk_taco_order
                                        FOREIGN KEY (taco_order) REFERENCES Taco_Order(id) ON DELETE CASCADE
);

-- Связь Taco <-> Ingredient (ManyToMany)
CREATE TABLE IF NOT EXISTS Ingredient_Ref (
                                              taco        BIGINT     NOT NULL,
                                              ingredient  VARCHAR(4) NOT NULL,
                                              CONSTRAINT pk_ingredient_ref PRIMARY KEY (taco, ingredient),
                                              CONSTRAINT fk_ing_ref_taco FOREIGN KEY (taco) REFERENCES Taco(id) ON DELETE CASCADE,
                                              CONSTRAINT fk_ing_ref_ing  FOREIGN KEY (ingredient) REFERENCES Ingredient(id) ON DELETE CASCADE
);

-- Индексы
CREATE INDEX IF NOT EXISTS idx_users_username ON users(username);
CREATE INDEX IF NOT EXISTS idx_taco_order    ON Taco(taco_order);
-- CREATE INDEX IF NOT EXISTS idx_ingref_taco ON Ingredient_Ref(taco);
