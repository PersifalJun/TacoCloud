-- === DROP (на чистый старт) ===
DROP TABLE IF EXISTS Ingredient_Ref;
DROP TABLE IF EXISTS Taco;
DROP TABLE IF EXISTS Taco_Order;
DROP TABLE IF EXISTS Ingredient;

-- === CREATE ===

-- Заказ
CREATE TABLE Taco_Order (
                            id                BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                            delivery_name     VARCHAR(50)  NOT NULL,
                            delivery_street   VARCHAR(50)  NOT NULL,
                            delivery_city     VARCHAR(50)  NOT NULL,
                            delivery_state    VARCHAR(20)  NOT NULL,
                            delivery_zip      VARCHAR(10)  NOT NULL,
                            cc_number         VARCHAR(16)  NOT NULL,
                            cc_expiration     VARCHAR(5)   NOT NULL,
                            cc_cvv            VARCHAR(3)   NOT NULL,
                            placed_at         TIMESTAMP    NOT NULL
);

-- Ингредиент
CREATE TABLE Ingredient (
                            id    VARCHAR(4)  NOT NULL PRIMARY KEY,
                            name  VARCHAR(25) NOT NULL,
    -- Enum в сущности хранится строкой, поэтому VARCHAR
                            type  VARCHAR(10) NOT NULL
);

-- Тако
CREATE TABLE Taco (
                      id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                      name            VARCHAR(50) NOT NULL,
                      taco_order      BIGINT      NOT NULL,
    -- ВАЖНО: колонка порядка должна существовать и быть nullable.
                      taco_order_key  BIGINT,
                      created_at      TIMESTAMP   NOT NULL,

                      CONSTRAINT fk_taco_order
                          FOREIGN KEY (taco_order) REFERENCES Taco_Order(id) ON DELETE CASCADE
);

-- Связь Taco <-> Ingredient (ManyToMany)
CREATE TABLE Ingredient_Ref (
                                taco        BIGINT     NOT NULL,
                                ingredient  VARCHAR(4) NOT NULL,

                                CONSTRAINT pk_ingredient_ref PRIMARY KEY (taco, ingredient),

                                CONSTRAINT fk_ing_ref_taco
                                    FOREIGN KEY (taco) REFERENCES Taco(id) ON DELETE CASCADE,
                                CONSTRAINT fk_ing_ref_ing
                                    FOREIGN KEY (ingredient) REFERENCES Ingredient(id) ON DELETE CASCADE
);

-- (Необязательно) Индексы
CREATE INDEX IF NOT EXISTS idx_taco_order ON Taco(taco_order);
CREATE INDEX IF NOT EXISTS idx_ingref_taco ON Ingredient_Ref(taco);
CREATE INDEX IF NOT EXISTS idx_ingref_ing  ON Ingredient_Ref(ingredient);
